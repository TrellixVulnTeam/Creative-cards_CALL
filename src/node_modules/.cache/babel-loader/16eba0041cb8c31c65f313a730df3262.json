{"ast":null,"code":"var _jsxFileName = \"/mnt/e/Proyectos Jana/My own projects/Creative-cards/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CardPreview from \"./CardPreview\";\nimport Form from \"./Form\";\nimport ls from \"../services/localStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [data, setData] = useState({\n    name: \"\",\n    job: \"\",\n    email: \"\",\n    photo: \"\",\n    github: \"\",\n    linkedin: \"\",\n    phone: \"\",\n    palette: \"1\"\n  }); //tomar el valor\n\n  useEffect(() => {\n    const dataInput = ls.get(\"dataInput\");\n\n    if (dataInput) {\n      setData(dataInput);\n    }\n  }, []); //guardar el valor\n\n  useEffect(() => {\n    ls.set(\"dataInput\", data);\n  }, [data]);\n\n  const handleResetButton = () => {\n    setData({\n      name: \"\",\n      job: \"\",\n      email: \"\",\n      photo: \"\",\n      github: \"\",\n      linkedin: \"\",\n      phone: \"\",\n      palette: \"1\"\n    });\n  }; // funcion lifting/props donde vienen todos los valores de los inputs para que se guarden y actualicen en nustro data\n\n\n  const handleChangeInputs = (inputValue, inputData) => {\n    console.log(\"Change!\", inputValue, inputData);\n    setData({ ...data,\n      [inputData]: inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"main_container\",\n    children: [/*#__PURE__*/_jsxDEV(CardPreview, {\n      data: data,\n      handleChangeInputs: handleChangeInputs,\n      handleResetButton: handleResetButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      data: data,\n      handleChangeInputs: handleChangeInputs,\n      handleResetButton: handleResetButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"CzgN6myV9SOBVrihSYSFzbjU0ws=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/mnt/e/Proyectos Jana/My own projects/Creative-cards/src/components/Main.js"],"names":["React","useState","useEffect","CardPreview","Form","ls","Main","data","setData","name","job","email","photo","github","linkedin","phone","palette","dataInput","get","set","handleResetButton","handleChangeInputs","inputValue","inputData","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,EAAP,MAAe,0BAAf;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAC/BQ,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,GAAG,EAAE,EAF0B;AAG/BC,IAAAA,KAAK,EAAE,EAHwB;AAI/BC,IAAAA,KAAK,EAAE,EAJwB;AAK/BC,IAAAA,MAAM,EAAE,EALuB;AAM/BC,IAAAA,QAAQ,EAAE,EANqB;AAO/BC,IAAAA,KAAK,EAAE,EAPwB;AAQ/BC,IAAAA,OAAO,EAAE;AARsB,GAAD,CAAhC,CADc,CAYd;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,SAAS,GAAGZ,EAAE,CAACa,GAAH,CAAO,WAAP,CAAlB;;AACA,QAAID,SAAJ,EAAe;AACbT,MAAAA,OAAO,CAACS,SAAD,CAAP;AACD;AACF,GALQ,EAKN,EALM,CAAT,CAbc,CAoBd;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,EAAE,CAACc,GAAH,CAAO,WAAP,EAAoBZ,IAApB;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMa,iBAAiB,GAAG,MAAM;AAC9BZ,IAAAA,OAAO,CAAC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,GAAG,EAAE,EAFC;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,MAAM,EAAE,EALF;AAMNC,MAAAA,QAAQ,EAAE,EANJ;AAONC,MAAAA,KAAK,EAAE,EAPD;AAQNC,MAAAA,OAAO,EAAE;AARH,KAAD,CAAP;AAUD,GAXD,CAzBc,CAsCd;;;AAEA,QAAMK,kBAAkB,GAAG,CAACC,UAAD,EAAaC,SAAb,KAA2B;AACpDC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,UAAvB,EAAmCC,SAAnC;AACAf,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACgB,SAAD,GAAaD;AAFP,KAAD,CAAP;AAID,GAND;;AAQA,sBACE;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA,4BAEE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEf,IADR;AAEE,MAAA,kBAAkB,EAAEc,kBAFtB;AAGE,MAAA,iBAAiB,EAAED;AAHrB;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,IAAD;AACE,MAAA,IAAI,EAAEb,IADR;AAEE,MAAA,kBAAkB,EAAEc,kBAFtB;AAGE,MAAA,iBAAiB,EAAED;AAHrB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA/DQd,I;;KAAAA,I;AAgET,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport CardPreview from \"./CardPreview\";\r\nimport Form from \"./Form\";\r\nimport ls from \"../services/localStorage\";\r\n\r\nfunction Main() {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    job: \"\",\r\n    email: \"\",\r\n    photo: \"\",\r\n    github: \"\",\r\n    linkedin: \"\",\r\n    phone: \"\",\r\n    palette: \"1\",\r\n  });\r\n\r\n  //tomar el valor\r\n  useEffect(() => {\r\n    const dataInput = ls.get(\"dataInput\");\r\n    if (dataInput) {\r\n      setData(dataInput);\r\n    }\r\n  }, []);\r\n\r\n  //guardar el valor\r\n  useEffect(() => {\r\n    ls.set(\"dataInput\", data);\r\n  }, [data]);\r\n\r\n  const handleResetButton = () => {\r\n    setData({\r\n      name: \"\",\r\n      job: \"\",\r\n      email: \"\",\r\n      photo: \"\",\r\n      github: \"\",\r\n      linkedin: \"\",\r\n      phone: \"\",\r\n      palette: \"1\",\r\n    });\r\n  };\r\n\r\n  // funcion lifting/props donde vienen todos los valores de los inputs para que se guarden y actualicen en nustro data\r\n\r\n  const handleChangeInputs = (inputValue, inputData) => {\r\n    console.log(\"Change!\", inputValue, inputData);\r\n    setData({\r\n      ...data,\r\n      [inputData]: inputValue,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"main_container\">\r\n      {/* esto se hace para exportar a las hijas todo el objeto data */}\r\n      <CardPreview\r\n        data={data}\r\n        handleChangeInputs={handleChangeInputs}\r\n        handleResetButton={handleResetButton}\r\n      />\r\n      <Form\r\n        data={data}\r\n        handleChangeInputs={handleChangeInputs}\r\n        handleResetButton={handleResetButton}\r\n      />\r\n    </section>\r\n  );\r\n}\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}